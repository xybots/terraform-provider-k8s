version: 2.1

executors:
    docker:
        docker:
            -   image: cimg/go:1.13
                environment:
                    GOFLAGS: -mod=readonly
    minikube:
        machine:
            image: ubuntu-1604:201903-01
            docker_layer_caching: true
        environment:
            KUBECONFIG: /home/circleci/.kube/config
            MINIKUBE_WANTUPDATENOTIFICATION: false
            MINIKUBE_WANTREPORTERRORPROMPT: false
            MINIKUBE_HOME: /home/circleci
            CHANGE_MINIKUBE_NONE_USER: true
            GOPATH: /go
            DOCKER_LATEST: 1

commands:
    setup_minikube:
        description: Setup minikube
        parameters:
            minikube_version:
                type: string
            kubernetes_version:
                type: string
        steps:
            -   run:
                    name: Install minikube
                    command: |
                        curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/<< parameters.minikube_version >>/minikube-linux-amd64
                        chmod +x minikube
                        sudo mv minikube /usr/local/bin/
            -   run:
                    name: Start minikube
                    background: true
                    command: |
                        sudo -E minikube start --vm-driver=none --cpus 2 --memory 4096 --kubernetes-version=<< parameters.kubernetes_version >> --extra-config="kubeadm.ignore-preflight-errors=FileExisting-crictl"
                        sudo -E minikube addons enable ingress
            -   run:
                    name: Install kubectl
                    command: |
                        curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/<< parameters.kubernetes_version >>/bin/linux/amd64/kubectl
                        chmod +x kubectl
                        sudo mv kubectl /usr/local/bin/
                        mkdir -p ${HOME}/.kube
                        touch ${HOME}/.kube/config

            -   run:
                    name: Wait for minikube
                    command: |
                        timeout 180s bash \<<EOT
                          set -o pipefail
                          function is_ready()
                          {
                            kubectl get nodes -o json \
                              | jq '.items[].status.conditions[] | select(.type=="Ready" and .status=="True")'
                          }
                          until is_ready
                          do
                            sleep 1
                          done
                        EOT
            -   run:
                    name: Start minikube tunnel
                    background: true
                    command: |
                        sudo -E minikube tunnel

    setup_go:
        description: Setup Go
        parameters:
            go_version:
                type: string
        steps:
            -   run:
                    name: Create Go directory
                    command: |
                        sudo mkdir /go
                        sudo chmod 777 /go

            -   run:
                    name: Install Go
                    command: |
                        sudo rm -rf /usr/local/go
                        curl -Lo go.linux-amd64.tar.gz https://dl.google.com/go/go<< parameters.go_version >>.linux-amd64.tar.gz
                        sudo tar -C /usr/local -xzf go.linux-amd64.tar.gz
                        rm go.linux-amd64.tar.gz

    integration:
        description: Integration tests
        parameters:
            kubernetes_version:
                type: string
            terraform_version:
                type: string
            example_dir:
                type: string
        steps:
            -   setup_minikube:
                    minikube_version: v1.6.2
                    kubernetes_version: << parameters.kubernetes_version >>
            -   setup_go:
                    go_version: "1.13"
            - checkout
            -   run:
                    name: Run integration tests
                    command: make TERRAFORM_VERSION=<< parameters.terraform_version >> test-integration
                    environment:
                        EXAMPLE_DIR: << parameters.example_dir >>

jobs:
    checks:
        executor: docker

        steps:
            - checkout

            -   run:
                    name: Run tests
                    command: go test .


    integration-test-012-k8s1-16:
        executor: minikube
        steps:
            -   integration:
                    kubernetes_version: v1.16.6
                    terraform_version: 0.12.20
                    example_dir: examples/0.12

    integration-test-012-k8s1-15:
        executor: minikube
        steps:
            -   integration:
                    kubernetes_version: v1.15.9
                    terraform_version: 0.12.20
                    example_dir: examples/0.12

    integration-test-012-k8s1-14:
        executor: minikube
        steps:
            -   integration:
                    kubernetes_version: v1.14.10
                    terraform_version: 0.12.20
                    example_dir: examples/0.12

    integration-test-pre012-k8s1-16:
        executor: minikube
        steps:
            -   integration:
                    kubernetes_version: v1.16.6
                    terraform_version: 0.11.14
                    example_dir: examples/pre0.12

    integration-test-pre012-k8s1-15:
        executor: minikube
        steps:
            -   integration:
                    kubernetes_version: v1.15.9
                    terraform_version: 0.11.14
                    example_dir: examples/pre0.12

    integration-test-pre012-k8s1-14:
        executor: minikube
        steps:
            -   integration:
                    kubernetes_version: v1.14.10
                    terraform_version: 0.11.14
                    example_dir: examples/pre0.12

#     release:
#         executor: docker

#         steps:
#             - checkout

#             -   run:
#                     name: Release
#                     command: make release

workflows:
    version: 2
    ci:
        jobs:
            - checks:
                  filters:
                      tags:
                          only: /^v?\d+\.\d+\.\d+(-\S*)?$/
            -   integration-test-012-k8s1-16:
                    requires:
                        - checks
                    filters:
                        tags:
                            only: /^v?\d+\.\d+\.\d+(-\S*)?$/
            -   integration-test-012-k8s1-15:
                    requires:
                        - checks
            -   integration-test-012-k8s1-14:
                    requires:
                        - checks
            -   integration-test-pre012-k8s1-16:
                    requires:
                        - checks
            -   integration-test-pre012-k8s1-15:
                    requires:
                        - checks
            -   integration-test-pre012-k8s1-14:
                    requires:
                        - checks
#             -   release:
#                     requires:
#                         - checks
#                         - integration-test-012-k8s1-16
#                     filters:
#                         tags:
#                             only: /^v?\d+\.\d+\.\d+(-\S*)?$/
#                         branches:
#                             ignore: /.*/
